#!/usr/bin/env python


import rospy
from sensor_msgs.msg import Image
from cv_bridge import CvBridge, CvBridgeError
import cv2
import numpy as np
import apriltag
import pyrealsense2 as rs
import numpy as np
import cv2
class TagDetection():

    def __init__(self):
            # Initialise arm message
            # Right arm subscriber
            self.rightcamsub = rospy.Subscriber('/cameras/right_hand_camera/image',
                                        Image,
                                        self.rightcam_callback,
                                        queue_size=1)

    def rightcam_callback(self, msg):

        self.rpub.publish(msg)


def main():
    rospy.init_node('tracker', anonymous=True)
    TagDetection()
    rospy.spin()



if __name__ == '__main__':
    try:
        main()
    except rospy.ROSInterruptException:
        pass


cap = cv2.VideoCapture(0)
detector = apriltag.Detector()
while True:
    ret, img = cap.read()
    gray_scale = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
    results = detector.detect(gray_scale)
    for cur_result in results:
        tag_id = cur_result.tag_id
        cx = cur_result.center.astype(np.int32)
        corners = cur_result.corners.astype(np.int32)
        for pt in corners:
            cv2.circle(img, tuple(pt), 3, (255, 0, 0))
        cv2.circle(img, tuple(cx), 3, (0, 0, 255))
        cv2.putText(img, str(tag_id), tuple(cx), cv2.FONT_HERSHEY_COMPLEX, 0.8, (0, 255, 0))

    cv2.imshow('img', img)
    cv2.waitKey(2)