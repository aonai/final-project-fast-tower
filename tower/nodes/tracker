#!/usr/bin/env python


import rospy
from sensor_msgs.msg import Image
from cv_bridge import CvBridge, CvBridgeError
import cv2
import numpy as np
import apriltag


bridge = CvBridge()

def image_callback(msg):
    print("Received an image!")
    try:
        # Convert your ROS Image message to OpenCV2
        cv2_img = bridge.imgmsg_to_cv2(msg, "bgr8")
    except CvBridgeError():
        print('error')
    else:
        # Save your OpenCV2 image as a jpeg 
        cv2.imwrite('tag.jpeg', cv2_img)

def main():
    rospy.init_node('tracker')
    # Define your image topic
    image_topic = "/cameras/left_hand_camera/image"
    # Set up your subscriber and define its callback
    rospy.Subscriber(image_topic, Image, image_callback)
    

    cap = 
    detector = apriltag.Detector()
    while True:
        ret, img = cap.read()
        # img = cv2.imread('tag.jpeg')
        gray_scale = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
        results = detector.detect(gray_scale)
        for cur_result in results:
            tag_id = cur_result.tag_id
            cx = cur_result.center.astype(np.int32)
            corners = cur_result.corners.astype(np.int32)
            for pt in corners:
                cv2.circle(img, tuple(pt), 3, (255, 0, 0))
            cv2.circle(img, tuple(cx), 3, (0, 0, 255))
            cv2.putText(img, str(tag_id), tuple(cx), cv2.FONT_HERSHEY_COMPLEX, 0.8, (0, 255, 0))

        cv2.imshow('img', img)
        cv2.waitKey(2)


    # Spin until ctrl + c
    rospy.sleep(2)
    rospy.spin()

if __name__ == '__main__':
    main()


