#!/usr/bin/env python

import rospy
from sensor_msgs.msg import Image
from std_msgs.msg import String
import cv2
from cv_bridge import CvBridge, CvBridgeError
import apriltag
from geometry_msgs.msg import Pose, Point
# from apriltag_ros.msg import AprilTagDetectionArray
import numpy as np

class Display():
    """
    This node publishes tag_detection_image to the head display of the Baxter
    """
    def __init__(self):
        # Initialise arm message

        # detection image subscriber
        self.detection_image_sub = rospy.Subscriber('/tag_detections_image', Image, self.callback, queue_size=1)

        # head screen publisher 
        self.pub = rospy.Publisher('/robot/xdisplay', Image, queue_size=1)
    

    def callback(self, msg):
        self.pub.publish
     

def main():
    rospy.init_node('cam_display', anonymous=True)
    Display()
    rospy.spin()


if __name__ == '__main__':
    try:
        main()
    except rospy.ROSInterruptException:
        pass