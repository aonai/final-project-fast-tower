#!/usr/bin/env python
"""
DESCRIPTION: This node publishes either images from right hand camera 
             or processed images from left hand camera.
SUBSCRIBERS: Subscribes to the 'arm_img' topic to decide which topic 
             to subsribe to, whether it is 'cameras/right_hand_camera/image' or 
             'proc_img' topic.
PUBLISHERS:  'robot/xdisplay' topic which is the head screen.
"""
import rospy
from sensor_msgs.msg import Image
from std_msgs.msg import String


class Display(object):
    """ The Display Class contains methods
        to display camera image from either 
        arm to the head screen
    """
    def __init__(self):
        # Initialise arm message
        self.arm = "right"
        # Right arm subscriber
        self.rsub = rospy.Subscriber('/cameras/right_hand_camera/image',
                                     Image,
                                     self.callback1,
                                     queue_size=1)

        # head screen publisher 
        self.pub = rospy.Publisher('/robot/xdisplay', Image, queue_size=15)

    def callback1(self, msg):
        """Publish right hand image to screen"""
        self.pub.publish(msg)
        

def main():
    rospy.init_node('head_screen_display', anonymous=True)
    rospy.loginfo("Initialised")
    display = Display()
    rospy.spin()


if __name__ == '__main__':
    try:
        main()
    except rospy.ROSInterruptException:
        pass